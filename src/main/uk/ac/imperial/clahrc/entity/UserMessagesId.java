/*******************************************************************************
 * Copyright 2013 Imperial College London
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package uk.ac.imperial.clahrc.entity;
// Generated 06-Mar-2012 11:45:25 by Hibernate Tools 3.4.0.CR1


import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;
import javax.validation.constraints.NotNull;

/**
 * UserMessagesId generated by hbm2java
 */
@Embeddable
public class UserMessagesId  implements java.io.Serializable {


	private static final long serialVersionUID = 1L;
	
	private int userId;
    private int projectId;
    private Date rcTimestamp;

    public UserMessagesId() {
    }

    public UserMessagesId(int userId, int projectId, Date rcTimestamp) {
       this.userId = userId;
       this.projectId = projectId;
       this.rcTimestamp = rcTimestamp;
    }
   


    @Column(name="User_ID", nullable=false)
    public int getUserId() {
        return this.userId;
    }
    
    public void setUserId(int userId) {
        this.userId = userId;
    }


    @Column(name="Project_ID", nullable=false)
    public int getProjectId() {
        return this.projectId;
    }
    
    public void setProjectId(int projectId) {
        this.projectId = projectId;
    }


    @Column(name="Rc_Timestamp", nullable=false, length=19)
    @NotNull
    public Date getRcTimestamp() {
        return this.rcTimestamp;
    }
    
    public void setRcTimestamp(Date rcTimestamp) {
    	this.rcTimestamp = (rcTimestamp == null ? new Timestamp(Calendar.getInstance().getTimeInMillis()) : rcTimestamp);
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof UserMessagesId) ) return false;
		 UserMessagesId castOther = ( UserMessagesId ) other; 
         
		 return (this.getUserId()==castOther.getUserId()) &&
				(this.getProjectId()==castOther.getProjectId()) && 
				( (this.getRcTimestamp()==castOther.getRcTimestamp()) || 
				  ( this.getRcTimestamp()!=null && 
				    castOther.getRcTimestamp()!=null && 
				    this.getRcTimestamp().equals(castOther.getRcTimestamp()) 
				  ) 
				);
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + this.getUserId();
         result = 37 * result + this.getProjectId();
         result = 37 * result + ( getRcTimestamp() == null ? 0 : this.getRcTimestamp().hashCode() );
         return result;
   }   


}


