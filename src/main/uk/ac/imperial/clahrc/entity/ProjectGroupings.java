package uk.ac.imperial.clahrc.entity;

// Generated 10-Apr-2014 13:50:26 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * ProjectGroupings generated by hbm2java
 */
@Entity
@Table(name = "project_groupings", catalog = "clahrc2", uniqueConstraints = {
		@UniqueConstraint(columnNames = "Name"),
		@UniqueConstraint(columnNames = "Theme") })
public class ProjectGroupings implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private String name;
	private String description;
	private String theme;
	private Set<Projects> projectses = new HashSet<Projects>(0);

	public ProjectGroupings() {
	}

	public ProjectGroupings(String name, String theme) {
		this.name = name.trim();
		this.theme = theme.trim();
	}

	public ProjectGroupings(String name, String description, String theme,
			Set<Projects> projectses) {
		this.name = name.trim();
		this.description = description;
		this.theme = theme.trim();
		this.projectses = projectses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "Name", unique = true, nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name.trim();
	}

	@Column(name = "Description", length = 10000)
	@Size(max = 10000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Theme", unique = true, nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getTheme() {
		return this.theme;
	}

	public void setTheme(String theme) {
		this.theme = theme;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectGroupings")
	public Set<Projects> getProjectses() {
		return this.projectses;
	}

	public void setProjectses(Set<Projects> projectses) {
		this.projectses = projectses;
	}

}
