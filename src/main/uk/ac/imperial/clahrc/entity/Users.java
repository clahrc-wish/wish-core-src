/*******************************************************************************
 * Copyright 2013 Imperial College London
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package uk.ac.imperial.clahrc.entity;

// Generated 15-Feb-2012 12:38:54 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "clahrc2", uniqueConstraints = @UniqueConstraint(columnNames = "Login_Name"))
public class Users implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private String firstName;
	private String lastName;
	private Date registrationDate = new Date();
	private boolean active = true;
	private String loginName;
	private String password;
	private String email;
	private Set<UserMessages> userMessageses = new HashSet<UserMessages>(0);
    private Set<UserProjectRolesAudit> userProjectRolesAuditsForAdminId = new HashSet<UserProjectRolesAudit>(0);
	private Set<LoginAudit> loginAudits = new HashSet<LoginAudit>(0);
    private Set<UserProjectRolesAudit> userProjectRolesAuditsForUserId = new HashSet<UserProjectRolesAudit>(0);
	private Set<Sustainability> sustainabilities = new HashSet<Sustainability>(0);
	private Set<Pdsa> pdsas = new HashSet<Pdsa>(0);
    private SortedSet<UserProjectRoles> userProjectRoleses = new TreeSet<UserProjectRoles>();
    private Set<UserProjectRoleRequests> userProjectRoleRequestses = new HashSet<UserProjectRoleRequests>(0);
	private Set<Ppi> ppis = new HashSet<Ppi>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Users() {
	}

	public Users(String firstName, String lastName, Date registrationDate,
			boolean active, String loginName, String password, String email) {
		this.firstName = firstName.trim();
		this.lastName = lastName.trim();
		this.registrationDate = registrationDate;
		this.active = active;
		this.loginName = loginName.trim();
		this.password = password.trim();
		this.email = email.trim();
	}

	public Users(String firstName, String lastName, Date registrationDate,
			boolean active, String loginName, String password, String email,
			Set<UserMessages> userMessageses, Set<UserProjectRolesAudit> userProjectRolesAuditsForAdminId,
			Set<LoginAudit> loginAudits,
			Set<UserProjectRolesAudit> userProjectRolesAuditsForUserId,
			Set<Sustainability> sustainabilities, Set<Pdsa> pdsas, SortedSet<UserProjectRoles> userProjectRoleses,
			Set<UserProjectRoleRequests> userProjectRoleRequestses,
			Set<Ppi> ppis, Set<Comment> comments ) {
		this.firstName = firstName.trim();
		this.lastName = lastName.trim();
		this.registrationDate = registrationDate;
		this.active = active;
		this.loginName = loginName.trim();
		this.password = password.trim();
		this.email = email.trim();
		this.userMessageses = userMessageses;
	    this.userProjectRolesAuditsForAdminId = userProjectRolesAuditsForAdminId;
		this.loginAudits = loginAudits;
	    this.userProjectRolesAuditsForUserId = userProjectRolesAuditsForUserId;
		this.sustainabilities = sustainabilities;
		this.pdsas = pdsas;
	    this.userProjectRoleses = userProjectRoleses;
	    this.userProjectRoleRequestses = userProjectRoleRequestses;
		this.ppis = ppis;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "First_Name", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName.trim();
	}

	@Column(name = "Last_Name", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName.trim();
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Registration_Date", nullable = false, length = 10)
	@NotNull
	public Date getRegistrationDate() {
		return this.registrationDate;
	}

	public void setRegistrationDate(Date registrationDate) {
		this.registrationDate = registrationDate;
	}

	@Column(name = "Active", nullable = false, columnDefinition = "BIT")
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "Login_Name", unique = true, nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName.trim();
	}

	@Column(name = "Password", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password.trim();
	}

	@Column(name = "Email", nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email.trim();
	}

	@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<UserMessages> getUserMessageses() {
        return this.userMessageses;
    }
    
    public void setUserMessageses(Set<UserMessages> userMessageses) {
        this.userMessageses = userMessageses;
    }
    
	@OneToMany(fetch=FetchType.LAZY, mappedBy="usersByAdminId")
    public Set<UserProjectRolesAudit> getUserProjectRolesAuditsForAdminId() {
        return this.userProjectRolesAuditsForAdminId;
    }
    
    public void setUserProjectRolesAuditsForAdminId(Set<UserProjectRolesAudit> userProjectRolesAuditsForAdminId) {
        this.userProjectRolesAuditsForAdminId = userProjectRolesAuditsForAdminId;
    }

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<LoginAudit> getLoginAudits() {
		return this.loginAudits;
	}

	public void setLoginAudits(Set<LoginAudit> loginAudits) {
		this.loginAudits = loginAudits;
	}

    @OneToMany(fetch=FetchType.LAZY, mappedBy="usersByUserId")
    public Set<UserProjectRolesAudit> getUserProjectRolesAuditsForUserId() {
        return this.userProjectRolesAuditsForUserId;
    }
    
    public void setUserProjectRolesAuditsForUserId(Set<UserProjectRolesAudit> userProjectRolesAuditsForUserId) {
        this.userProjectRolesAuditsForUserId = userProjectRolesAuditsForUserId;
    }

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Sustainability> getSustainabilities() {
		return this.sustainabilities;
	}

	public void setSustainabilities(Set<Sustainability> sustainabilities) {
		this.sustainabilities = sustainabilities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Pdsa> getPdsas() {
		return this.pdsas;
	}

	public void setPdsas(Set<Pdsa> pdsas) {
		this.pdsas = pdsas;
	}

	@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
	@Sort(type = SortType.NATURAL) 
    public SortedSet<UserProjectRoles> getUserProjectRoleses() {
        return this.userProjectRoleses;
    }
    
    public void setUserProjectRoleses(SortedSet<UserProjectRoles> userProjectRoleses) {
        this.userProjectRoleses = userProjectRoleses;
    }

	@OneToMany(fetch=FetchType.LAZY, mappedBy="users")
    public Set<UserProjectRoleRequests> getUserProjectRoleRequestses() {
        return this.userProjectRoleRequestses;
    }
    
    public void setUserProjectRoleRequestses(Set<UserProjectRoleRequests> userProjectRoleRequestses) {
        this.userProjectRoleRequestses = userProjectRoleRequestses;
    }

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Ppi> getPpis() {
		return this.ppis;
	}

	public void setPpis(Set<Ppi> ppis) {
		this.ppis = ppis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}
	
}
