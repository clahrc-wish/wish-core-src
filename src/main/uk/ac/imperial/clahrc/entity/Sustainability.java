/*******************************************************************************
 * Copyright 2013 Imperial College London
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package uk.ac.imperial.clahrc.entity;

// Generated 02-Dec-2011 18:48:54 by Hibernate Tools 3.4.0.CR1

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Size;
import javax.validation.constraints.NotNull;

/**
 * Sustainability generated by hbm2java
 */
@Entity
@Table(name = "sustainability", catalog = "clahrc2")
public class Sustainability implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private Users users;
	private Projects projects;
	private Date eventDate;
	private Integer score1;
	private Integer score2;
	private Integer score3;
	private Integer score4;
	private Integer score5;
	private Integer score6;
	private Integer score7;
	private Integer score8;
	private Integer score9;
	private Integer score10;
	private String comment;
	private Date rcTimestamp;

	public Sustainability() {
	}

	public Sustainability(Users users, Projects projects, Date eventDate,
			Integer score1, Integer score2, Integer score3, Integer score4,
			Integer score5, Integer score6, Integer score7, Integer score8,
			Integer score9, Integer score10,
			Date rcTimestamp) {
		this.users = users;
		this.projects = projects;
		this.eventDate = eventDate;
		this.score1 = score1;
		this.score2 = score2;
		this.score3 = score3;
		this.score4 = score4;
		this.score5 = score5;
		this.score6 = score6;
		this.score7 = score7;
		this.score8 = score8;
		this.score9 = score9;
		this.score10 = score10;
		this.rcTimestamp = rcTimestamp;
	}

	public Sustainability(Users users, Projects projects, Date eventDate,
			Integer score1, Integer score2, Integer score3, Integer score4,
			Integer score5, Integer score6, Integer score7, Integer score8,
			Integer score9, Integer score10,
			String comment, Date rcTimestamp) {
		this.users = users;
		this.projects = projects;
		this.eventDate = eventDate;
		this.score1 = score1;
		this.score2 = score2;
		this.score3 = score3;
		this.score4 = score4;
		this.score5 = score5;
		this.score6 = score6;
		this.score7 = score7;
		this.score8 = score8;
		this.score9 = score9;
		this.score10 = score10;
		this.comment = comment;
		this.rcTimestamp = rcTimestamp;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "User_ID", nullable = false)
	@NotNull
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Project_ID", nullable = false)
	@NotNull
	public Projects getProjects() {
		return this.projects;
	}

	public void setProjects(Projects projects) {
		this.projects = projects;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Event_Date", nullable = false, length = 10)
	@NotNull
	public Date getEventDate() {
		return this.eventDate;
	}

	public void setEventDate(Date eventDate) {
		this.eventDate = eventDate;
	}

	@Column(name = "Score_1", nullable = false, precision = 12, scale = 0)
	public Integer getScore1() {
		return this.score1;
	}

	public void setScore1(Integer score1) {
		this.score1 = score1;
	}

	@Column(name = "Score_2", nullable = false, precision = 12, scale = 0)
	public Integer getScore2() {
		return this.score2;
	}

	public void setScore2(Integer score2) {
		this.score2 = score2;
	}

	@Column(name = "Score_3", nullable = false, precision = 12, scale = 0)
	public Integer getScore3() {
		return this.score3;
	}

	public void setScore3(Integer score3) {
		this.score3 = score3;
	}

	@Column(name = "Score_4", nullable = false, precision = 12, scale = 0)
	public Integer getScore4() {
		return this.score4;
	}

	public void setScore4(Integer score4) {
		this.score4 = score4;
	}

	@Column(name = "Score_5", nullable = false, precision = 12, scale = 0)
	public Integer getScore5() {
		return this.score5;
	}

	public void setScore5(Integer score5) {
		this.score5 = score5;
	}

	@Column(name = "Score_6", nullable = false, precision = 12, scale = 0)
	public Integer getScore6() {
		return this.score6;
	}

	public void setScore6(Integer score6) {
		this.score6 = score6;
	}

	@Column(name = "Score_7", nullable = false, precision = 12, scale = 0)
	public Integer getScore7() {
		return this.score7;
	}

	public void setScore7(Integer score7) {
		this.score7 = score7;
	}

	@Column(name = "Score_8", nullable = false, precision = 12, scale = 0)
	public Integer getScore8() {
		return this.score8;
	}

	public void setScore8(Integer score8) {
		this.score8 = score8;
	}

	@Column(name = "Score_9", nullable = false, precision = 12, scale = 0)
	public Integer getScore9() {
		return this.score9;
	}

	public void setScore9(Integer score9) {
		this.score9 = score9;
	}

	@Column(name = "Score_10", nullable = false, precision = 12, scale = 0)
	public Integer getScore10() {
		return this.score10;
	}

	public void setScore10(Integer score10) {
		this.score10 = score10;
	}

	@Column(name = "Comment", length = 1000)
	@Size(max = 1000)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Rc_Timestamp", nullable = false, length = 19)
	public Date getRcTimestamp() {
		return this.rcTimestamp;
	}

	public void setRcTimestamp(Date rcTimestamp) {
		this.rcTimestamp = (rcTimestamp == null ? new Timestamp(Calendar.getInstance().getTimeInMillis()) : rcTimestamp);
	}

	/////copied over from clahrc1 to support some Java->DB->Java jive - ask Vasa
	public double score1Val() {
		if (score1 == 0)
			return 8.7;
		else if (score1 == 1) return 4.7;
		else if (score1 == 2) return 4.0;
		else return 0;
	}
	public double score2Val() {
		if (score2 == 0)
			return 9.1;
		else if (score2 == 1) return 6.3;
		else if (score2 == 2) return 3.1;
		else return 0;
	}
	public double score3Val() {
		if (score3 == 0)
			return 7.0;
		else if (score3 == 1) return 3.4;
		else if (score3 == 2) return 2.4;
		else return 0;
	}	
	public double score4Val() {
		if (score4 == 0)
			return 6.7;
		else if (score4 == 1) return 3.3;
		else if (score4 == 2) return 2.4;
		else return 0;
	}
	public double score5Val() {
		if (score5 == 0)
			return 11.5;
		else if (score5 == 1) return 4.9;
		else if (score5 == 2) return 6.3;
		else return 0;
	}
	public double score6Val() {
		if (score6 == 0)
			return 11.0;
		else if (score6 == 1) return 5.1;
		else if (score6 == 2) return 5.1;
		else return 0;
	}
	public double score7Val() {
		if (score7 == 0)
			return 15.0;
		else if (score7 == 1) return 6.2;
		else if (score7 == 2) return 5.7;
		else return 0;
	}
	public double score8Val() {
		if (score8 == 0)
			return 15.0;
		else if (score8 == 1) return 6.7;
		else if (score8 == 2) return 5.5;
		else return 0;
	}
	public double score9Val() {
		if (score9 == 0)
			return 7.2;
		else if (score9 == 1) return 3.3;
		else if (score9 == 2) return 3.5;
		else return 0;
	}
	public double score10Val() {
		if (score10 == 0)
			return 9.7;
		else if (score10 == 1) return 4.4;
		else if (score10 == 2) return 3.3;
		else return 0;
	}
	public int compareTo(Sustainability o)
	{
		return -1 * eventDate.compareTo(o.eventDate);
	}
	//////////copied over from clahrc1
}
