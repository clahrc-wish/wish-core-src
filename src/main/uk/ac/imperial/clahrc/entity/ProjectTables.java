/*******************************************************************************
 * Copyright 2013 Imperial College London
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package uk.ac.imperial.clahrc.entity;
// Generated 17-May-2012 13:33:54 by Hibernate Tools 3.4.0.CR1


import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/**
 * ProjectTables generated by hbm2java
 */
@Entity
@Table(name = "project_tables", catalog = "clahrc2", uniqueConstraints = {
		@UniqueConstraint(columnNames = "Table_Label"),
		@UniqueConstraint(columnNames = "Table_Name") })
public class ProjectTables  implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	
	private ProjectTablesId id;
    private Projects projects;
	private String tableLabel;

    public ProjectTables() {
    }

    public ProjectTables(ProjectTablesId id, Projects projects,
			String tableLabel) {
       this.id = id;
       this.projects = projects;
		this.tableLabel = tableLabel;
    }
   
    @EmbeddedId
    @AttributeOverrides( {
    @AttributeOverride(name="projectId", column=@Column(name="Project_ID", nullable=false) ), 
    @AttributeOverride(name="tableName", column=@Column(name="Table_Name", unique=true, nullable=false, length=45) ) } )
    @NotNull
    public ProjectTablesId getId() {
        return this.id;
    }
    
    public void setId(ProjectTablesId id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Project_ID", nullable=false, insertable=false, updatable=false)
    @NotNull
    public Projects getProjects() {
        return this.projects;
    }
    
    public void setProjects(Projects projects) {
        this.projects = projects;
    }
    
    @Column(name = "Table_Label", unique = true, nullable = false, length = 45)
	@NotNull
	@Size(max = 45)
	public String getTableLabel() {
		return this.tableLabel;
	}

	public void setTableLabel(String tableLabel) {
		this.tableLabel = tableLabel;
	}
}


